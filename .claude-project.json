{
  "name": "Offer Creator - Real Estate CRM",
  "description": "AI-powered Real Estate CRM with chatbot integration for Narissa Realty - Task #016 completed, ready for Task #017",
  "version": "1.1.0",
  "type": "python-flask-webapp",
  "keymap": {
    "start": "cd core_app && source ../venv/bin/activate && python real_estate_crm.py",
    "dev": "cd core_app && source ../venv/bin/activate && python real_estate_crm.py",
    "test": "cd core_app && source ../venv/bin/activate && python -m pytest ../tests/ -v",
    "shell": "cd core_app && source ../venv/bin/activate",
    "requirements": "source venv/bin/activate && pip install -r requirements.txt",
    "db": "cd core_app && ls -la *.db && echo '---' && sqlite3 real_estate_crm.db '.tables'",
    "logs": "cd core_app && tail -20 flask.log",
    "forms": "ls -la documents/*.pdf | head -15",
    "tasks": "cat tasks/tasks.json | jq '.tasks[] | select(.status != \"completed\" and .status != \"obsolete\")'",
    "status": "cat documentation/activeContext.md",
    "changelog": "cat documentation/changelog.md",
    "context": "cat documentation/activeContext.md && echo '---' && cat tasks/tasks.json | jq '.metadata'",
    "debug": "cd core_app && source ../venv/bin/activate && python -c 'import real_estate_crm; print(\"Flask app loaded successfully\")'",
    "chat": "curl -X POST http://localhost:5000/chat -H 'Content-Type: application/json' -d '{\"message\": \"test connection\"}'",
    "dashboard": "echo 'Dashboard: http://localhost:5000/' && echo 'Debug Chat: http://localhost:5000/debug_chat'",
    "ai": "cd core_app && source ../venv/bin/activate && python -c 'from real_estate_crm import get_gemini_response; print(get_gemini_response(\"test\"))'"
  },
  "structure": {
    "core": ["core_app/real_estate_crm.py", "core_app/zipform_ai_functions.py", "core_app/mls_integration.py"],
    "database": ["core_app/real_estate_crm.db", "core_app/database/"],
    "frontend": ["templates/", "static/"],
    "docs": ["documentation/", "tasks/"],
    "config": ["requirements.txt", "venv/"],
    "forms": ["documents/*.pdf"],
    "ai": ["ai_modules/"],
    "logs": ["core_app/flask.log"]
  },
  "context": {
    "active": "documentation/activeContext.md",
    "changelog": "documentation/changelog.md", 
    "tasks": "tasks/tasks.json",
    "readme": "documentation/README.md",
    "branch": "documentation/BRANCH_README.md"
  },
  "endpoints": {
    "dashboard": "http://localhost:5000/",
    "chat": "http://localhost:5000/chat",
    "debug": "http://localhost:5000/debug_chat",
    "clients": "http://localhost:5000/clients",
    "properties": "http://localhost:5000/properties",
    "api_stats": "http://localhost:5000/api/dashboard_stats"
  },
  "metadata": {
    "last_load": "2025-06-01T08:30:00Z",
    "last_sync": "2025-06-01T08:45:00Z",
    "project_status": "‚úÖ PRODUCTION READY - All Development Complete",
    "session_status": "üéâ PROJECT COMPLETION: All 10 tasks successfully completed",
    "current_task": "COMPLETE - All development tasks finished",
    "breakthrough": "üèÜ PRODUCTION DEPLOYMENT READY: Full AI-Enhanced Real Estate CRM operational", 
    "completion_date": "2025-06-01",
    "files_ready": [
      "README.md (comprehensive project documentation)",
      "real_estate_crm.py (production-ready Flask app)",
      "zipform_ai_functions.py (6 operational LangChain tools)",
      "templates/crm_dashboard.html (fully functional chatbot interface)",
      "real_estate_crm.db (177-field optimized database)",
      "activeContext.md (current project state)",
      "changelog.md (complete development history)"
    ],
    "test_status": "‚úÖ All tests PASSED - Production validation complete",
    "branch_status": "main (promoted from feature branch, PR #3 merged)",
    "task_progress": "10/10 tasks completed (100%)",
    "ai_integration": "‚úÖ Gemini 2.5 Flash + LangChain fully operational with user safety",
    "code_quality": "‚úÖ CodeRabbit SUCCESS - All quality issues resolved",
    "performance": "‚úÖ All targets met (<3s response, <1s DB ops, <2s updates)",
    "capabilities": [
      "üöÄ Gemini 2.5 Flash AI integration with function calling", 
      "‚úÖ Production-ready chatbot interface",
      "‚úÖ 6 LangChain tools fully operational",
      "‚úÖ 177-field optimized CRM database",
      "‚úÖ User confirmation workflow with safety checks", 
      "‚úÖ Real-time dashboard updates after AI operations",
      "‚úÖ AI-native entity extraction with fallback",
      "‚úÖ Comprehensive error handling and validation",
      "‚úÖ Professional documentation and README",
      "‚úÖ Clean git history and branch management"
    ]
  }
}