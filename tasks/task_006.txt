# Task ID: 6
# Title: Implement Data Mapping and CRM Database Update Logic
# Status: pending
# Dependencies: 4
# Priority: high
# Description: Implement the logic in `real_estate_crm.py` to receive extracted data from the email processing endpoint, map it to the 177-field CRM schema, handle conflicts, and update the database.
# Details:
Inside the `/process_email` route handler in `real_estate_crm.py`, receive the JSON data payload. Implement Python logic to map the keys from the received JSON (extracted entities) to the corresponding fields in the 177-field CRM schema. Use the database interaction layer (e.g., SQLAlchemy models or raw SQL queries based on `real_estate_crm_schema.sql`) to insert new records or update existing ones. Implement the conflict resolution logic as specified in the PRD (e.g., prompt user, overwrite, merge). Return a response indicating success, failure, or conflicts.

# Test Strategy:
Write unit tests for the data mapping and database update functions using sample extracted JSON data and the 177-field schema. Test scenarios for inserting new clients/properties and updating existing ones. Test conflict resolution logic with sample conflicting data. Test the `/process_email` endpoint with sample data and verify database changes using a database client or another CRM view.
